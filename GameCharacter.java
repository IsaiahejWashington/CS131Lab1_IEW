import java.util.*;
public class GameCharacter {

	//instance variables - visibility is protected so subclasses can manipulate the data directly.
		protected String uniqueID; //unique identifier assigned to each character object.
		protected String personality; //personality data type for the character.
		protected String intelligenceType;
		protected boolean active;
		protected String introduce;
		protected String exclaim;
			
		/**
		 *  The empty argument constructor generates an ID
		 *  by calling a static method from the GameUtilities class
		 */
		public GameCharacter() {
			
			Random r = new Random();
			r.setSeed(1000);
			int id = r.nextInt(1000);
			setUniqueID(Integer.toString(id));
			setPersonality("NEUTRAL");
				
		}//end empty-argument constructor
		
		/**
		 * This constructor allows the caller to pass in
		 * the uniqueID for the object.
		 * 
		 * @param uniqueID
		 */
		public GameCharacter(String uniqueID, String personality, String intelligenceType, boolean active, String introduce, String exclaim) {
			
			setUniqueID(uniqueID);
			setPersonality(personality);
			setIntelligenceType(intelligenceType);
			setActive(active);
			setIntroduce(introduce);
			setExclaim(exclaim);
			
		}//end full-argument constructor
		
		/**
		 * Returns the structure of the object in a specially
		 * formatted representation. This is the preferred
		 * method for printing out the object structure.
		 * @return
		 */
		public String reportStructure(){
			
			StringBuilder sb = new StringBuilder("==================================\n");
			sb.append("UniqueID: "+getUniqueID()+"\n");
			sb.append("Personality: "+getPersonality()+"\n");
			sb.append("==================================\n");
			
			sb.append("=============================\n");
			sb.append("Active: "+ isActive()+"\n");
			sb.append("Intelligence: "+getIntelligenceType()+"\n");
			sb.append("===============================\n");
			
			sb.append("Hello my name is "+uniqueID+"\n");
			sb.append(getExclaim());
			return sb.toString();
			
		}//end reportStats

		/**
		 * Getter for uniqueID 
		 * @return  uniqueID
		 */
		public String getUniqueID() {
			return uniqueID;
		}//end getUniqueID

		/**
		 * Setter for uniqueID
		 * @param name
		 */
		public void setUniqueID(String name) {
			this.uniqueID = name;
		}//end setUniqueID
		
		/**
		 *  Getter for personality
		 * @return
		 */
		public String getPersonality() {
			return personality;
		}//end getPersonality
		
		/**
		 * setter for personality
		 * @param personality
		 */
		public void setPersonality(String personality) {
			this.personality = personality;
		}//setPersonality
		
		

		public String getIntelligenceType() {
			return intelligenceType;
		}

		public void setIntelligenceType(String intelligenceType) {
			this.intelligenceType = intelligenceType;
		}
		
		

		public boolean isActive() {
			return active;
		}

		public void setActive(boolean active) {
			this.active = active;
		}
		
		

		public String getIntroduce() {
			return introduce;
		}

		public void setIntroduce(String introduce) {
			this.introduce = introduce;
		}
		
		

		public String getExclaim() {
			return exclaim;
		}

		public void setExclaim(String exclaim) {
			this.exclaim = exclaim;
		}

		/**
		 * Used for test purposes only using the toString
		 * format generated by Eclipse.
		 */
		@Override
		public String toString() {
			return "GameCharacter [uniqueID=" + uniqueID + ", personality=" + personality + "]";
		}//end toString

	}//end class
